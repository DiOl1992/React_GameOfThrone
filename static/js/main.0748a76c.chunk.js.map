{"version":3,"sources":["components/errorMessage/error.jpg","components/header/header.js","components/header/index.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/itemList.js","components/itemList/index.js","components/pages/booksPage.js","components/itemDetails/itemDetails.js","components/itemDetails/index.js","components/rowBlock/index.js","components/rowBlock/rowBlock.js","components/pages/characterPage.js","components/pages/housesPage.js","components/pages/booksItem.js","components/app/app.js","components/app/index.js","index.js"],"names":["module","exports","__webpack_require__","p","HeaderBlock","styled","div","_templateObject","HeaderTitle","h3","_templateObject2","HeaderLinks","ul","_templateObject3","Header","react_default","a","createElement","react_router_dom","to","GOTService","_this","this","Object","classCallCheck","getResource","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","res","wrap","_context","prev","next","fetch","concat","_apiBase","sent","ok","Error","status","json","abrupt","stop","_x","apply","arguments","getAllCharacters","_callee2","_context2","map","_transformChar","getCharacter","_ref3","_callee3","id","character","_context3","_x2","getAllHouses","_callee4","houses","_context4","_transformHouse","getHouse","_ref5","_callee5","house","_context5","_x3","getAllBooks","_callee6","books","_context6","_transformBook","getBook","_ref7","_callee7","book","_context7","_x4","_extractId","item","match","char","name","isSet","gender","born","died","culture","region","words","titles","overlord","ansectralWeapons","numberOfPages","publiser","released","data","Spinner","className","class","ErrorMessage","Fragment","src","img","alt","RandomBlock","randomChar_templateObject","RandomBlockTitle","h4","randomChar_templateObject2","Term","span","randomChar_templateObject3","RandomChar","gotService","state","loading","onCharLoaded","setState","error","onError","err","updateChar","Math","floor","random","then","catch","timerId","setInterval","clearInterval","console","log","_this$state","errorMessage","components_errorMessage","spinner","components_spinner","content","randomChar_View","Component","View","ListGroup","flush","ListGroupItem","ListItem","li","itemList_templateObject","ListContainer","itemList_templateObject2","ItemList","itemList","_this2","getData","props","arr","_this3","label","renderItem","key","onClick","onItemSelected","items","renderItems","BooksPage","components_itemList","itemId","history","push","withRouter","ItemDetail","itemDetails_templateObject","itemDetails_templateObject2","ErrorSpan","itemDetails_templateObject3","Field","field","itemDetails_Term","ItemDetails","updateItem","prevProps","_this$props","React","Children","children","child","cloneElement","RowBlock","left","right","Row","Col","md","CharacterPage","selectedChar","itemDetails","components_itemDetails","itemDetails_Field","components_rowBlock","HousesPage","selectedHouse","BooksItem","bookId","ButtonRandomChar","button","app_templateObject","App","randomChar","toggleRandomChar","Container","components_header","lg","size","offset","react_router","path","component","exact","render","params","booksItem_BooksItem","ReactDOM","components_app","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,i2BCIxC,IAAMC,EAAcC,IAAOC,IAAVC,KAOXC,EAAcH,IAAOI,GAAVC,KAMXC,EAAcN,IAAOO,GAAVC,KCfFC,ED2BA,WACX,OACIC,EAAAC,EAAAC,cAACb,EAAD,KACIW,EAAAC,EAAAC,cAACT,EAAD,KACIO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KAAT,uBAIJJ,EAAAC,EAAAC,cAACN,EAAD,KACII,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,gBAAT,eAEJJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,YAAT,WAEJJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,WAAT,sDE3CCC,aAEjB,SAAAA,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAING,YAJM,eAAAC,EAAAH,OAAAI,EAAA,EAAAJ,CAAAK,EAAAZ,EAAAa,KAIQ,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAJ,EAAAZ,EAAAiB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQC,MAAK,GAAAC,OAAIjB,EAAKkB,UAATD,OAAoBP,IADjC,WACJC,EADIE,EAAAM,MAIDC,GAJC,CAAAP,EAAAE,KAAA,cAKA,IAAIM,MAAJ,mBAAAJ,OAA6BP,EAA7B,cAAAO,OAA6CN,EAAIW,SALjD,cAAAT,EAAAE,KAAA,EAQGJ,EAAIY,OARP,cAAAV,EAAAW,OAAA,SAAAX,EAAAM,MAAA,wBAAAN,EAAAY,SAAAhB,EAAAR,SAJR,gBAAAyB,GAAA,OAAArB,EAAAsB,MAAA1B,KAAA2B,YAAA,GAAA3B,KAgBN4B,iBAhBM3B,OAAAI,EAAA,EAAAJ,CAAAK,EAAAZ,EAAAa,KAgBa,SAAAsB,IAAA,IAAAnB,EAAA,OAAAJ,EAAAZ,EAAAiB,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACGf,EAAKI,YAAY,sBADpB,cACTO,EADSoB,EAAAZ,KAAAY,EAAAP,OAAA,SAERb,EAAIqB,IAAIhC,EAAKiC,iBAFL,wBAAAF,EAAAN,SAAAK,EAAA7B,SAhBbA,KAsBNiC,aAtBM,eAAAC,EAAAjC,OAAAI,EAAA,EAAAJ,CAAAK,EAAAZ,EAAAa,KAsBS,SAAA4B,EAAOC,GAAP,IAAAC,EAAA,OAAA/B,EAAAZ,EAAAiB,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EACaf,EAAKI,YAAL,eAAAa,OAAgCoB,IAD7C,cACLC,EADKC,EAAApB,KAAAoB,EAAAf,OAAA,SAEJxB,EAAKiC,eAAeK,IAFhB,wBAAAC,EAAAd,SAAAW,EAAAnC,SAtBT,gBAAAuC,GAAA,OAAAL,EAAAR,MAAA1B,KAAA2B,YAAA,GAAA3B,KA2BNwC,aA3BMvC,OAAAI,EAAA,EAAAJ,CAAAK,EAAAZ,EAAAa,KA2BS,SAAAkC,IAAA,IAAAC,EAAA,OAAApC,EAAAZ,EAAAiB,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACUf,EAAKI,YAAY,WAD3B,cACLuC,EADKC,EAAAzB,KAAAyB,EAAApB,OAAA,SAEJmB,EAAOX,IAAIhC,EAAK6C,kBAFZ,wBAAAD,EAAAnB,SAAAiB,EAAAzC,SA3BTA,KAgCN6C,SAhCM,eAAAC,EAAA7C,OAAAI,EAAA,EAAAJ,CAAAK,EAAAZ,EAAAa,KAgCK,SAAAwC,EAAOX,GAAP,IAAAY,EAAA,OAAA1C,EAAAZ,EAAAiB,KAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,cAAAmC,EAAAnC,KAAA,EACaf,EAAKI,YAAL,WAAAa,OAA4BoB,IADzC,cACDY,EADCC,EAAA/B,KAAA+B,EAAA1B,OAAA,SAEAxB,EAAK6C,gBAAgBI,IAFrB,wBAAAC,EAAAzB,SAAAuB,EAAA/C,SAhCL,gBAAAkD,GAAA,OAAAJ,EAAApB,MAAA1B,KAAA2B,YAAA,GAAA3B,KAqCNmD,YArCMlD,OAAAI,EAAA,EAAAJ,CAAAK,EAAAZ,EAAAa,KAqCQ,SAAA6C,IAAA,IAAAC,EAAA,OAAA/C,EAAAZ,EAAAiB,KAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAAxC,KAAA,EACUf,EAAKI,YAAY,UAD3B,cACJkD,EADIC,EAAApC,KAAAoC,EAAA/B,OAAA,SAEH8B,EAAMtB,IAAIhC,EAAKwD,iBAFZ,wBAAAD,EAAA9B,SAAA4B,EAAApD,SArCRA,KA0CNwD,QA1CM,eAAAC,EAAAxD,OAAAI,EAAA,EAAAJ,CAAAK,EAAAZ,EAAAa,KA0CI,SAAAmD,EAAOtB,GAAP,IAAAuB,EAAA,OAAArD,EAAAZ,EAAAiB,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA9C,KAAA,EACaf,EAAKI,YAAL,UAAAa,OAA2BoB,IADxC,cACAuB,EADAC,EAAA1C,KAAA0C,EAAArC,OAAA,SAECxB,EAAKwD,eAAeI,IAFrB,wBAAAC,EAAApC,SAAAkC,EAAA1D,SA1CJ,gBAAA6D,GAAA,OAAAJ,EAAA/B,MAAA1B,KAAA2B,YAAA,GAAA3B,KAuDN8D,WAAa,SAACC,GAEV,OAAOA,EAAKtD,IAAIuD,MADC,eACe,IAzD9BhE,KA4DNgC,eAAiB,SAACiC,GACd,MAAO,CACH7B,GAAIrC,EAAK+D,WAAWG,GACpBC,KAAMnE,EAAKoE,MAAMF,EAAKC,MACtBE,OAAQrE,EAAKoE,MAAMF,EAAKG,QACxBC,KAAMtE,EAAKoE,MAAMF,EAAKI,MACtBC,KAAMvE,EAAKoE,MAAMF,EAAKK,MACtBC,QAASxE,EAAKoE,MAAMF,EAAKM,WAnE3BvE,KAwEN4C,gBAAkB,SAACI,GACf,MAAO,CACHZ,GAAIrC,EAAK+D,WAAWd,GACpBkB,KAAMnE,EAAKoE,MAAMnB,EAAMkB,MACvBM,OAAQzE,EAAKoE,MAAMnB,EAAMwB,QACzBC,MAAO1E,EAAKoE,MAAMnB,EAAMyB,OACxBC,OAAQ3E,EAAKoE,MAAMnB,EAAM0B,QACzBC,SAAU5E,EAAKoE,MAAMnB,EAAM2B,UAC3BC,iBAAkB7E,EAAKoE,MAAMnB,EAAM4B,oBAhFrC5E,KAoFNuD,eAAiB,SAACI,GACd,MAAO,CACHvB,GAAIrC,EAAK+D,WAAWH,GACpBO,KAAMnE,EAAKoE,MAAMR,EAAKO,MACtBW,cAAe9E,EAAKoE,MAAMR,EAAKkB,eAC/BC,SAAU/E,EAAKoE,MAAMR,EAAKmB,UAC1BC,SAAUhF,EAAKoE,MAAMR,EAAKoB,YAzFtC/E,KAAKiB,SAAW,0FA8CN+D,GACF,OAAGA,GAGQ,2FCtDZC,SCEA,WACX,OACIxF,EAAAC,EAAAC,cAAA,OAAKuF,UAAU,qCAAoCzF,EAAAC,EAAAC,cAAA,OAAKwF,MAAM,oBAC9D1F,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,aAAiBF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,aAAiBF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,aAAiBF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,aAAiBF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,aAAiBF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,aAAiBF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,aAAiBF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,0CCLxJyF,ECGM,WACjB,OACI3F,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2F,SAAA,KACI5F,EAAAC,EAAAC,cAAA,OAAK2F,IAAKC,IAAKC,IAAI,UACnB/F,EAAAC,EAAAC,cAAA,ghBCDZ,IAAM8F,EAAc1G,IAAOC,IAAV0G,KASXC,EAAmB5G,IAAO6G,GAAVC,KAKhBC,EAAO/G,IAAOgH,KAAVC,KAMWC,6MAIjBC,WAAa,IAAIA,IACjBC,MAAQ,CACJlC,KAAM,GACNmC,SAAS,KAGbC,aAAe,SAACpC,GACZlE,EAAKuG,SAAS,CACVrC,OACAmC,SAAS,EACTG,OAAO,OAgBfC,QAAU,SAACC,GACP1G,EAAKuG,SAAS,CACVC,OAAO,EACPH,SAAS,OAKjBM,WAAa,WACT,IAAMtE,EAAKuE,KAAKC,MAAoB,IAAdD,KAAKE,SAAe,IAE1C9G,EAAKmG,WAAWjE,aAAaG,GACxB0E,KAAK/G,EAAKsG,cACVU,MAAMhH,EAAKyG,6FAvBhBxG,KAAK0G,aACL1G,KAAKgH,QAAUC,YAAYjH,KAAK0G,WAAY,qDAK5CQ,cAAclH,KAAKgH,0CAqBnBG,QAAQC,IAAI,UADR,IAAAC,EAE2BrH,KAAKmG,MAA7BlC,EAFHoD,EAEGpD,KAAMmC,EAFTiB,EAESjB,QAASG,EAFlBc,EAEkBd,MAEhBe,EAAef,EAAQ9G,EAAAC,EAAAC,cAAC4H,EAAD,MAAkB,KACzCC,EAAUpB,EAAU3G,EAAAC,EAAAC,cAAC8H,EAAD,MAAa,KACjCC,EAAYtB,GAAWG,EAA+B,KAAtB9G,EAAAC,EAAAC,cAACgI,EAAD,CAAM1D,KAAMA,IAElD,OACIxE,EAAAC,EAAAC,cAAC8F,EAAD,KACK6B,EACAE,EACAE,UA1DuBE,aAgElCC,EAAO,SAAAzH,GAAY,IAAV6D,EAAU7D,EAAV6D,KACJC,EAAqCD,EAArCC,KAAME,EAA+BH,EAA/BG,OAAQC,EAAuBJ,EAAvBI,KAAMC,EAAiBL,EAAjBK,KAAMC,EAAWN,EAAXM,QACjC,OACI9E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2F,SAAA,KACI5F,EAAAC,EAAAC,cAACgG,EAAD,0BAC2BzB,GAEvBzE,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAWC,OAAK,GACZtI,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAe9C,UAAU,kCACrBzF,EAAAC,EAAAC,cAACmG,EAAD,gBACArG,EAAAC,EAAAC,cAAA,YAAOyE,IAEX3E,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAe9C,UAAU,kCACrBzF,EAAAC,EAAAC,cAACmG,EAAD,cACArG,EAAAC,EAAAC,cAAA,YAAO0E,IAEX5E,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAe9C,UAAU,kCACrBzF,EAAAC,EAAAC,cAACmG,EAAD,cACArG,EAAAC,EAAAC,cAAA,YAAO2E,IAEX7E,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAe9C,UAAU,kCACrBzF,EAAAC,EAAAC,cAACmG,EAAD,iBACArG,EAAAC,EAAAC,cAAA,YAAO4E,OC/GhB0B,2eCMf,IAAMgC,EAAWlJ,IAAOmJ,GAAVC,KAcRC,EAAgBrJ,IAAOC,IAAVqJ,KCpBJC,6MD6BXnC,MAAQ,CACJoC,SAAU,yFAIK,IAAAC,EAAAxI,MAGfyI,EAFkBzI,KAAK0I,MAAhBD,WAGF3B,KAAM,SAACyB,GACJC,EAAKlC,SAAS,CACViC,mDAQJI,GAAI,IAAAC,EAAA5I,KACZ,OAAO2I,EAAI5G,IAAI,SAACgC,GAAS,IAGd3B,EAAM2B,EAAN3B,GACDyG,EAAQD,EAAKF,MAAMI,WAAW/E,GAEpC,OAEItE,EAAAC,EAAAC,cAACsI,EAAD,CACAc,IAAK3G,EACL4G,QAAU,kBAAMJ,EAAKF,MAAMO,eAAe7G,KAExCyG,sCAOL,IAEEN,EAAYvI,KAAKmG,MAAjBoC,SAEP,IAAIA,EACA,OAAO9I,EAAAC,EAAAC,cAAC8H,EAAD,MAGX,IAAMyB,EAAQlJ,KAAKmJ,YAAYZ,GAG/B,OACI9I,EAAAC,EAAAC,cAACyI,EAAD,KACKc,UAtDqBtB,oBE6BhCwB,6MACFlD,WAAa,IAAIA,IAEjBC,MAAQ,CACJI,OAAO,sFAMPvG,KAAKsG,SAAS,CACVC,OAAO,qCAIN,IAAAiC,EAAAxI,KACL,OAAIA,KAAKmG,MAAMI,MACJ9G,EAAAC,EAAAC,cAAC4H,EAAD,MAMP9H,EAAAC,EAAAC,cAAC0J,EAAD,CACAJ,eAAgB,SAACK,GACbd,EAAKE,MAAMa,QAAQC,KAAKF,IAE5Bb,QAASzI,KAAKkG,WAAW/C,YACzB2F,WAAY,SAAA1I,GAAA,OAAAA,EAAE8D,eA5BF0D,aAiCT6B,cAAYL,qlBCnF3B,IAAMM,GAAa3K,IAAOC,IAAV2K,MASV7D,GAAO/G,IAAOgH,KAAV6D,KAIJC,GAAY9K,IAAOgH,KAAV+D,KAUTC,GAAO,SAAA3J,GAA0B,IAAxB2D,EAAwB3D,EAAxB2D,KAAMiG,EAAkB5J,EAAlB4J,MAAOnB,EAAWzI,EAAXyI,MACxB,OACIpJ,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAe9C,UAAU,kCACrBzF,EAAAC,EAAAC,cAACsK,GAAD,KAAOpB,GACPpJ,EAAAC,EAAAC,cAAA,YAAOoE,EAAKiG,MClCTE,8MD8CX/D,MAAQ,CACJpC,KAAM,yFAIN/D,KAAKmK,wDAGUC,GACZpK,KAAK0I,MAAMY,SAAWc,EAAUd,QAC/BtJ,KAAKmK,kDAYD,IAAA3B,EAAAxI,KAAAqK,EACkBrK,KAAK0I,MAAxBY,EADCe,EACDf,OAAQb,EADP4B,EACO5B,QACXa,GAIJb,EAAQa,GACHxC,KAAK,SAAC/C,GACHyE,EAAKlC,SAAS,CAACvC,4CAwBvB,IAAK/D,KAAKmG,MAAMpC,KACZ,OAAOtE,EAAAC,EAAAC,cAACkK,GAAD,uCANN,IASE9F,EAAQ/D,KAAKmG,MAAbpC,KACAG,EAAQH,EAARG,KAMP,OACIzE,EAAAC,EAAAC,cAAC+J,GAAD,KACIjK,EAAAC,EAAAC,cAAA,UAAKuE,GACLzE,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAWC,OAAK,GAERuC,IAAMC,SAASxI,IAAI/B,KAAK0I,MAAM8B,SAAU,SAACC,GACrC,OAAOH,IAAMI,aAAaD,EAAO,CAAC1G,oBA1ErB6D,aE3C1B+C,GCGE,SAAAvK,GAAmB,IAAjBwK,EAAiBxK,EAAjBwK,KAAMC,EAAWzK,EAAXyK,MACrB,OACQpL,EAAAC,EAAAC,cAACmL,EAAA,EAAD,KACIrL,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAKC,GAAG,KACHJ,GAELnL,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAKC,GAAG,KACHH,KCFAI,8MAEjB/E,WAAa,IAAIA,IAEjBC,MAAQ,CACJ+E,aAAc,KACd3E,OAAO,KAIX0C,eAAiB,SAAC7G,GACdrC,EAAKuG,SAAS,CACV4E,aAAc9I,wFAMlBpC,KAAKsG,SAAS,CACVC,OAAO,qCAMX,GAAIvG,KAAKmG,MAAMI,MACX,OAAO9G,EAAAC,EAAAC,cAAC4H,EAAD,MAGX,IAAMgB,EACF9I,EAAAC,EAAAC,cAAC0J,EAAD,CACQJ,eAAgBjJ,KAAKiJ,eACrBR,QAAWzI,KAAKkG,WAAWtE,iBAC3BkH,WAAc,SAAA1I,GAAA,IAAE8D,EAAF9D,EAAE8D,KAAME,EAARhE,EAAQgE,OAAR,SAAApD,OAAuBkD,EAAvB,MAAAlD,OAAgCoD,EAAhC,QAIpB+G,EACF1L,EAAAC,EAAAC,cAACyL,GAAD,CACI9B,OAAQtJ,KAAKmG,MAAM+E,aACnBzC,QAASzI,KAAKkG,WAAWjE,cAEzBxC,EAAAC,EAAAC,cAAC0L,GAAD,CAAOrB,MAAM,SAASnB,MAAM,WAC5BpJ,EAAAC,EAAAC,cAAC0L,GAAD,CAAOrB,MAAM,OAAOnB,MAAM,SAC1BpJ,EAAAC,EAAAC,cAAC0L,GAAD,CAAOrB,MAAM,OAAOnB,MAAM,SAC1BpJ,EAAAC,EAAAC,cAAC0L,GAAD,CAAOrB,MAAM,UAAUnB,MAAM,aAMrC,OACIpJ,EAAAC,EAAAC,cAAC2L,GAAD,CAAUV,KAAQrC,EAAUsC,MAASM,WApDNvD,aCFtB2D,8MACjBrF,WAAa,IAAIA,IAEjBC,MAAQ,CACJqF,cAAe,KACfjF,OAAO,KAGX0C,eAAiB,SAAC7G,GACdrC,EAAKuG,SAAS,CACVkF,cAAepJ,wFAKnBpC,KAAKsG,SAAS,CACVC,OAAO,qCAKX,GAAIvG,KAAKmG,MAAMI,MACX,OAAO9G,EAAAC,EAAAC,cAAC4H,EAAD,MAGX,IAAMgB,EACF9I,EAAAC,EAAAC,cAAC0J,EAAD,CACIJ,eAAgBjJ,KAAKiJ,eACrBR,QAASzI,KAAKkG,WAAW1D,aACzBsG,WAAY,SAAA1I,GAAA,OAAAA,EAAE8D,QAGhBiH,EACF1L,EAAAC,EAAAC,cAACyL,GAAD,CACA9B,OAAQtJ,KAAKmG,MAAMqF,cACnB/C,QAASzI,KAAKkG,WAAWrD,UACrBpD,EAAAC,EAAAC,cAAC0L,GAAD,CAAOrB,MAAM,SAASnB,MAAM,WAC5BpJ,EAAAC,EAAAC,cAAC0L,GAAD,CAAOrB,MAAM,QAAQnB,MAAM,UAC3BpJ,EAAAC,EAAAC,cAAC0L,GAAD,CAAOrB,MAAM,SAASnB,MAAM,WAC5BpJ,EAAAC,EAAAC,cAAC0L,GAAD,CAAOrB,MAAM,mBAAmBnB,MAAM,uBAI9C,OACGpJ,EAAAC,EAAAC,cAAC2L,GAAD,CAAUV,KAAMrC,EAAUsC,MAAOM,WA5CJvD,aCHnB6D,8MACjBvF,WAAa,IAAIA,0EAIb,OACIzG,EAAAC,EAAAC,cAACyL,GAAD,CACA9B,OAAQtJ,KAAK0I,MAAMgD,OACnBjD,QAASzI,KAAKkG,WAAW1C,SACrB/D,EAAAC,EAAAC,cAAC0L,GAAD,CAAOrB,MAAM,gBAAgBnB,MAAM,oBACnCpJ,EAAAC,EAAAC,cAAC0L,GAAD,CAAOrB,MAAM,YAAYnB,MAAM,cAC/BpJ,EAAAC,EAAAC,cAAC0L,GAAD,CAAOrB,MAAM,WAAWnB,MAAM,qBAXPjB,oOCWvC,IAAM+D,GAAmB5M,IAAO6M,OAAVC,MCbPC,8MD2BX5F,WAAa,IAAIA,IAEjBC,MAAQ,CACJ4F,YAAY,EACZxF,OAAO,EACPiF,cAAe,MAUnBQ,iBAAmB,WACfjM,EAAKuG,SAAS,SAACH,GACX,MAAO,CACH4F,YAAa5F,EAAM4F,kGAT3B5E,QAAQC,IAAI,SACZpH,KAAKsG,SAAS,CACVC,OAAO,qCAiBX,IAAMtC,EAAOjE,KAAKmG,MAAM4F,WAAatM,EAAAC,EAAAC,cAACoM,EAAD,MAAgB,KAErD,OAAI/L,KAAKmG,MAAMI,MACJ9G,EAAAC,EAAAC,cAAC4H,EAAD,MAIP9H,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACAH,EAAAC,EAAAC,cAAA,OAAKuF,UAAU,OACXzF,EAAAC,EAAAC,cAACsM,EAAA,EAAD,KACIxM,EAAAC,EAAAC,cAACuM,EAAD,OAEJzM,EAAAC,EAAAC,cAACsM,EAAA,EAAD,KACIxM,EAAAC,EAAAC,cAACmL,EAAA,EAAD,KACIrL,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAKoB,GAAI,CAACC,KAAM,EAAGC,OAAQ,IACtBpI,EACDxE,EAAAC,EAAAC,cAACgM,GAAD,CAAkB3C,QAAShJ,KAAKgM,kBAAhC,uBAORvM,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWvB,KACrCxL,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWjB,KACjC9L,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAOC,KAAK,SAASE,OAAK,EAACD,UAAWpD,IACtC3J,EAAAC,EAAAC,cAAC2M,EAAA,EAAD,CAAOC,KAAK,aAAaG,OACrB,SAAAtM,GAAa,IACFgC,EADEhC,EAAX4D,MACmB2I,OAAVvK,GACP,OAAO3C,EAAAC,EAAAC,cAACiN,GAAD,CAAWlB,OAAQtJ,iBA3DrBwF,yBEnBjCiF,IAASH,OAAOjN,EAAAC,EAAAC,cAACmN,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.0748a76c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.9bf7facf.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst HeaderBlock = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 80px;\r\n`;\r\n\r\nconst HeaderTitle = styled.h3`\r\n    font-size: 24px;\r\n    color: #fff;\r\n    margin: 0;\r\n`;\r\n\r\nconst HeaderLinks = styled.ul`\r\n    display: flex;\r\n    margin: 0;\r\n    align-items: center;\r\n    color: #fff;\r\n    list-style-type: none;\r\n    li {\r\n        margin-right: 20px;\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderBlock>\r\n            <HeaderTitle>\r\n                <Link to='/'>\r\n                Game of Thrones DB\r\n                </Link>\r\n            </HeaderTitle>\r\n            <HeaderLinks>\r\n                <li>\r\n                    <Link to='/characters/'>Characters</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/houses/'>Houses</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/books/'>Books</Link>   \r\n                </li>\r\n            </HeaderLinks>\r\n        </HeaderBlock>\r\n    );\r\n};\r\n\r\nexport default Header;","import Header from './header';\r\n\r\nexport default Header;","// import React from 'react';\r\n\r\nexport default class GOTService{\r\n\r\n    constructor() {\r\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\r\n    }\r\n\r\n            getResource = async (url) => {\r\n                const res = await fetch(`${this._apiBase}${url}`); //promise\r\n                \r\n                //обработка серверной ошибки 404\r\n                if (!res.ok){\r\n                    throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n                }\r\n        \r\n                return await res.json();\r\n                };\r\n        \r\n            //метод чтобы получать персонажей из 5 страницы постов\r\n            getAllCharacters = async () => {\r\n                const res = await this.getResource('/characters?page=5');\r\n                return res.map(this._transformChar);\r\n            }\r\n        \r\n            //получать отдельного персонажа по id\r\n            getCharacter = async (id) =>{\r\n                const character = await this.getResource(`/characters/${id}`);\r\n                return this._transformChar(character);\r\n            }\r\n\r\n            getAllHouses = async () => {\r\n                const houses = await this.getResource('/houses');\r\n                return houses.map(this._transformHouse);\r\n            }\r\n\r\n            getHouse = async (id) => {\r\n                const house = await this.getResource(`/houses/${id}`);\r\n                return this._transformHouse(house);\r\n            }\r\n\r\n            getAllBooks = async () => {\r\n                const books = await this.getResource('/books');\r\n                return books.map(this._transformBook);\r\n            }\r\n\r\n            getBook = async (id) => {\r\n                const book = await this.getResource(`/books/${id}`);\r\n                return this._transformBook(book);\r\n            }\r\n\r\n            isSet(data){\r\n                if(data){\r\n                    return data \r\n                } else {\r\n                    return 'нет информании'\r\n                }\r\n            }\r\n\r\n            _extractId = (item) => {\r\n                const idRegExp = /\\/([0-9]*)$/;\r\n                return item.url.match(idRegExp)[1];\r\n            }\r\n\r\n            _transformChar = (char) => {\r\n                return {\r\n                    id: this._extractId(char),\r\n                    name: this.isSet(char.name),\r\n                    gender: this.isSet(char.gender),\r\n                    born: this.isSet(char.born),\r\n                    died: this.isSet(char.died),\r\n                    culture: this.isSet(char.culture)\r\n                }\r\n                    \r\n            }\r\n\r\n            _transformHouse = (house) => {\r\n                return {\r\n                    id: this._extractId(house),\r\n                    name: this.isSet(house.name),\r\n                    region: this.isSet(house.region),\r\n                    words: this.isSet(house.words),\r\n                    titles: this.isSet(house.titles),\r\n                    overlord: this.isSet(house.overlord),\r\n                    ansectralWeapons: this.isSet(house.ansectralWeapons)\r\n                }\r\n            }\r\n\r\n            _transformBook = (book) => {\r\n                return {\r\n                    id: this._extractId(book),\r\n                    name: this.isSet(book.name),\r\n                    numberOfPages: this.isSet(book.numberOfPages),\r\n                    publiser: this.isSet(book.publiser),\r\n                    released: this.isSet(book.released)\r\n                }\r\n            }\r\n      \r\n}\r\n\r\n    \r\n","import Spinner from './spinner';\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner =() => {\r\n    return (\r\n        <div className=\"loadingio-spinner-spin-si9z0te09b\"><div class=\"ldio-nqqqw0r8f3h\">\r\n        <div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\r\n        </div></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import ErrorMessage from './errorMessage';\r\nexport default ErrorMessage;","import React from 'react';\r\nimport './errorMessage.css';\r\nimport img from './error.jpg'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <>\r\n            <img src={img} alt='error'></img>\r\n            <span>Что-то пошло не так</span>\r\n        </>\r\n    \r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport gotService from '../../services/gotService';\r\nimport Spinner from '../spinner';\r\nimport ErrorMessage from '../errorMessage';\r\n\r\nconst RandomBlock = styled.div`\r\n    background-color: #fff;\r\n    padding: 25px 25px 15px 25px;\r\n    margin-bottom: 40px;\r\n    img{\r\n        width: 100%\r\n    }\r\n`;\r\n\r\nconst RandomBlockTitle = styled.h4`\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n`;\r\n\r\nconst Term = styled.span`\r\n    font-weight: bold;\r\n`\r\n\r\n\r\n\r\nexport default class RandomChar extends Component {\r\n\r\n    \r\n\r\n    gotService = new gotService();\r\n    state = {\r\n        char: {},\r\n        loading: true\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char,\r\n            loading: false,\r\n            error: false\r\n        \r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updateChar();\r\n        this.timerId = setInterval(this.updateChar, 15000);\r\n    }\r\n\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n\r\n    onError = (err) => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false,\r\n\r\n        })\r\n    }\r\n\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random()*140 + 25);\r\n        // const id = 130000000;\r\n        this.gotService.getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    render(){\r\n        console.log('render');\r\n        const {char, loading, error} = this.state;\r\n\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? <View char={char}/> : null;\r\n\r\n        return (\r\n            <RandomBlock> \r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </RandomBlock>\r\n        );\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, gender, born, died, culture} = char;\r\n    return(\r\n        <>\r\n            <RandomBlockTitle>\r\n                    Random Character: {name}\r\n                </RandomBlockTitle>\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"justify-content-between d-flex\">\r\n                        <Term>Gender </Term>\r\n                        <span>{gender}</span>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem className=\"justify-content-between d-flex\">\r\n                        <Term>Born </Term>\r\n                        <span>{born}</span>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem className=\"justify-content-between d-flex\">\r\n                        <Term>Died </Term>\r\n                        <span>{died}</span>\r\n                    </ListGroupItem>\r\n                    <ListGroupItem className=\"justify-content-between d-flex\">\r\n                        <Term>Culture </Term>\r\n                        <span>{culture}</span>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import RandomChar from './randomChar';\r\n\r\nexport default RandomChar;","// с использованием state\r\n\r\nimport React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport Spinner from '../spinner';\r\n\r\n\r\n\r\nconst ListItem = styled.li`\r\n    cursor: pointer;\r\n    list-style: none;\r\n    position: relative;\r\n    display: block;\r\n    padding: 0.75rem 1.25rem;\r\n    background-color: #fff;\r\n    border-top: 1px solid rgba(0, 0, 0, 0.125);\r\n    &:first-child{\r\n        border: none\r\n    }\r\n    \r\n`\r\n\r\nconst ListContainer = styled.div`\r\n    background-color: #fff;\r\n    padding: 25px 25px 15px 25px;\r\n    margin-bottom: 40px;\r\n`\r\n\r\n\r\nexport default class ItemList extends Component {\r\n\r\n    state = {\r\n        itemList: null,\r\n       \r\n    }\r\n  \r\n    componentDidMount(){\r\n        const {getData} = this.props;\r\n\r\n        getData()\r\n            .then( (itemList) => {\r\n                this.setState({\r\n                    itemList,\r\n                   \r\n                })\r\n            })\r\n            \r\n    }\r\n\r\n\r\n    renderItems(arr){\r\n        return arr.map((item) => {\r\n\r\n\r\n            const {id} = item;\r\n            const label = this.props.renderItem(item);\r\n\r\n            return (\r\n              \r\n                <ListItem \r\n                key={id}\r\n                onClick={ () => this.props.onItemSelected(id)}\r\n                >\r\n                 {label}\r\n                </ListItem>\r\n                \r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {itemList} = this.state;\r\n\r\n        if(!itemList){\r\n            return <Spinner/>\r\n        }\r\n\r\n        const items = this.renderItems(itemList);\r\n\r\n       \r\n        return (\r\n            <ListContainer>\r\n                {items}\r\n            </ListContainer>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n//с использованием ХУКов\r\n\r\n// import React, {useState, useEffect} from 'react';\r\n// import styled from 'styled-components';\r\n// import Spinner from '../spinner';\r\n\r\n\r\n\r\n// const ListItem = styled.li`\r\n//     cursor: pointer;\r\n//     list-style: none;\r\n//     position: relative;\r\n//     display: block;\r\n//     padding: 0.75rem 1.25rem;\r\n//     background-color: #fff;\r\n//     border-top: 1px solid rgba(0, 0, 0, 0.125);\r\n//     &:first-child{\r\n//         border: none\r\n//     }\r\n    \r\n// `\r\n\r\n// const ListContainer = styled.div`\r\n//     background-color: #fff;\r\n//     padding: 25px 25px 15px 25px;\r\n//     margin-bottom: 40px;\r\n// `\r\n\r\n\r\n// function ItemList({getData, onItemSelected, renderItem}) {\r\n\r\n//     const [itemList, updateList] = useState([]);\r\n\r\n  \r\n//     useEffect(() => {\r\n//         getData()\r\n//         .then( (data) => {\r\n//             updateList(data)\r\n//             })\r\n//         }, [])\r\n\r\n\r\n\r\n//     function renderItems(arr){\r\n//         return arr.map((item) => {\r\n\r\n\r\n//             const {id} = item;\r\n//             const label = renderItem(item);\r\n\r\n//             return (\r\n              \r\n//                 <ListItem \r\n//                 key={id}\r\n//                 onClick={ () => onItemSelected(id)}\r\n//                 >\r\n//                  {label}\r\n//                 </ListItem>\r\n                \r\n//             )\r\n//         })\r\n//     }\r\n\r\n\r\n//         if(!itemList){\r\n//             return <Spinner/>\r\n//         }\r\n\r\n//         const items = renderItems(itemList);\r\n\r\n       \r\n//         return (\r\n//             <ListContainer>\r\n//                 {items}\r\n//             </ListContainer>\r\n            \r\n//         );\r\n// }\r\n\r\n// export default ItemList;","import ItemList from './itemList';\r\n\r\nexport default ItemList;","// import React, {Component} from 'react';\r\n// // import {Col, Row} from 'reactstrap';\r\n// import ItemList from '../itemList';\r\n// import ErrorMessage from '../errorMessage';\r\n// import gotService from '../../services/gotService';\r\n\r\n\r\n\r\n// export default class BooksPage extends Component{\r\n\r\n//     gotService = new gotService();\r\n\r\n//     state = {\r\n//         selectedBook: null,\r\n//         error: false\r\n\r\n//     }\r\n\r\n//     onItemSelected = (id) => {\r\n//         this.setState({\r\n//             selectedChar: id\r\n//         })\r\n//     }\r\n\r\n//     componentDidCatch(){\r\n       \r\n//         this.setState({\r\n//             error: true\r\n//         })\r\n//     }\r\n\r\n//     render(){\r\n\r\n//         if (this.state.error){\r\n//             return <ErrorMessage/>\r\n//         }\r\n\r\n\r\n//         return(\r\n//             <ItemList\r\n//             onItemSelected={(itemId) => {\r\n//                 this.props.history.push(itemId)\r\n//             }}\r\n//             getData={this.gotService.getAllBooks}\r\n//             renderItem={({name}) => name}\r\n//             />\r\n//         )\r\n        \r\n//     }\r\n// }\r\n\r\nimport React, {Component} from 'react';\r\nimport ItemList from '../itemList';\r\nimport ErrorMessage from '../errorMessage';\r\nimport gotService from '../../services/gotService';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\nclass BooksPage extends Component {\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n   \r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n       \r\n\r\n        return (\r\n            <ItemList \r\n            onItemSelected={(itemId) => {\r\n                this.props.history.push(itemId)\r\n            }}\r\n            getData={this.gotService.getAllBooks}\r\n            renderItem={({name}) => name}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter (BooksPage);","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nimport Spinner from '../spinner';\r\nimport ErrorMessage from '../errorMessage';\r\n\r\n\r\nconst ItemDetail = styled.div`\r\n    background-color: #fff;\r\n    padding: 25px 25px 15px 25px;\r\n    margin-bottom: 40px;\r\n    h4{\r\n        margin-bottom: 20px;\r\n        text-align: center;\r\n    }\r\n`\r\nconst Term = styled.span`\r\n    font-weight: bold;\r\n    margin-right: 10px;\r\n`\r\nconst ErrorSpan = styled.span`\r\n    background: #fff;\r\n    height: 30px;\r\n    width: max-content;\r\n    display: flex;\r\n    padding: 0 15px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst Field =({item, field, label}) => {\r\n    return (\r\n        <ListGroupItem className=\"d-flex justify-content-between\">\r\n            <Term>{label}</Term>\r\n            <span>{item[field]}</span>\r\n        </ListGroupItem>\r\n    )\r\n}\r\n\r\nexport{\r\n    Field\r\n};\r\n\r\nexport default class ItemDetails extends Component {\r\n\r\n\r\n    state = {\r\n        item: null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updateItem();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.itemId !== prevProps.itemId) {\r\n            this.updateItem();\r\n        }\r\n    }\r\n\r\n    // onItemDetailsLoaded = (item) => {\r\n    //     this.setState({\r\n    //         item,\r\n    //         loading: false\r\n        \r\n    //     })\r\n    // }\r\n\r\n    updateItem(){\r\n        const {itemId, getData} = this.props;\r\n        if(!itemId){\r\n            return;\r\n        }\r\n\r\n        getData(itemId)\r\n            .then((item)=>{\r\n                this.setState({item})\r\n            })\r\n\r\n        // this.setState({\r\n        //     loading: true\r\n        // })\r\n        // this.gotService.getCharacter(itemId)\r\n        //     .then(this.onItemDetailsLoaded)\r\n        //     .catch( () => this.onError())\r\n        \r\n    }\r\n\r\n    // onError(){\r\n    //     this.setState({\r\n    //         char: null,\r\n    //         error: true\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n\r\n        // if(!this.state.item && this.state.error){\r\n        //     return <ErrorMessage/>\r\n        // } else \r\n        if (!this.state.item){\r\n            return <ErrorSpan>Please select item in the list</ErrorSpan>\r\n        }\r\n\r\n        const {item} = this.state;\r\n        const {name} = item;\r\n\r\n        // if(this.state.loading){\r\n        //     return <Spinner/> \r\n        // }\r\n\r\n        return (\r\n            <ItemDetail>\r\n                <h4>{name}</h4>\r\n                <ListGroup flush>\r\n                    {\r\n                        React.Children.map(this.props.children, (child) => {\r\n                            return React.cloneElement(child, {item})\r\n                        })\r\n                    }\r\n                </ListGroup>\r\n            </ItemDetail>\r\n        );\r\n    }\r\n}","import ItemDetails, {Field} from './itemDetails';\r\nexport default ItemDetails;\r\nexport{\r\n    Field\r\n}","import RowBlock from './rowBlock';\r\nexport default RowBlock;","import React from 'react';\r\nimport {Col, Row} from 'reactstrap';\r\n\r\n\r\nconst RowBlock = ({left, right}) => {\r\n    return (\r\n            <Row>\r\n                <Col md='6'>\r\n                    {left}\r\n                </Col>\r\n                <Col md='6'>\r\n                    {right}\r\n                </Col>\r\n            </Row>\r\n    )\r\n}\r\n\r\nexport default RowBlock;","import React, {Component} from 'react';\r\n// import {Col, Row} from 'reactstrap';\r\nimport ItemList from '../itemList';\r\nimport ItemDetails, {Field} from '../itemDetails';\r\nimport ErrorMessage from '../errorMessage';\r\nimport gotService from '../../services/gotService';\r\nimport RowBlock from '../rowBlock';\r\n\r\n\r\nexport default class CharacterPage extends Component{\r\n\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        selectedChar: null,\r\n        error: false\r\n\r\n    }\r\n\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n\r\n    componentDidCatch(){\r\n       \r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.error){\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        const itemList = (\r\n            <ItemList \r\n                    onItemSelected={this.onItemSelected}\r\n                    getData = {this.gotService.getAllCharacters}\r\n                    renderItem = {({name, gender}) => `${name} (${gender})`}\r\n                    />\r\n        )\r\n\r\n        const itemDetails = (\r\n            <ItemDetails \r\n                itemId={this.state.selectedChar}\r\n                getData={this.gotService.getCharacter}\r\n            >\r\n                <Field field='gender' label='Gender'/>\r\n                <Field field='born' label='Born'/>\r\n                <Field field='died' label='Died'/>\r\n                <Field field='culture' label='Culture'/>\r\n            </ItemDetails>\r\n\r\n\r\n        )\r\n\r\n        return(\r\n            <RowBlock left = {itemList} right = {itemDetails} />\r\n        )\r\n        \r\n    }\r\n}","import React, {Component} from 'react';\r\nimport ItemList from '../itemList';\r\nimport ItemDetails, {Field} from '../itemDetails';\r\nimport ErrorMessage from '../errorMessage';\r\nimport gotService from '../../services/gotService';\r\nimport RowBlock from '../rowBlock';\r\n\r\nexport default class HousesPage extends Component {\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        selectedHouse: null,\r\n        error: false\r\n    }\r\n\r\n    onItemSelected = (id) => {\r\n        this.setState({\r\n            selectedHouse: id\r\n        })\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        const itemList = (\r\n            <ItemList \r\n                onItemSelected={this.onItemSelected}\r\n                getData={this.gotService.getAllHouses}\r\n                renderItem={({name}) => name}/>\r\n        )\r\n\r\n        const itemDetails = (\r\n            <ItemDetails\r\n            itemId={this.state.selectedHouse}\r\n            getData={this.gotService.getHouse} >\r\n                <Field field='region' label='Region'/>\r\n                <Field field='words' label='Words'/>\r\n                <Field field='titles' label='Titles'/>\r\n                <Field field='ancestralWeapons' label='Ancestral Weapons'/>\r\n            </ItemDetails>\r\n        )\r\n\r\n        return (\r\n           <RowBlock left={itemList} right={itemDetails} />\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport gotService from '../../services/gotService';\r\nimport ItemDetails, {Field} from '../itemDetails';\r\n\r\nexport default class BooksItem extends Component {\r\n    gotService = new gotService();\r\n\r\n\r\n    render () {\r\n        return (\r\n            <ItemDetails\r\n            itemId={this.props.bookId}\r\n            getData={this.gotService.getBook} >\r\n                <Field field='numberOfPages' label='Number of pages'/>\r\n                <Field field='publisher' label='Publisher'/>\r\n                <Field field='released' label='Released'/>\r\n            </ItemDetails>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Col, Row, Container} from 'reactstrap';\r\nimport Header from '../header';\r\nimport RandomChar from '../randomChar';\r\nimport BooksPage from '../pages/booksPage';\r\nimport CharacterPage from '../pages/characterPage';\r\nimport HousesPage from '../pages/housesPage';\r\nimport BooksItem from '../pages/booksItem';\r\nimport gotService from '../../services/gotService';\r\n\r\nimport styled from 'styled-components';\r\nimport ErrorMessage from '../errorMessage';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport './app.css';\r\n\r\nconst ButtonRandomChar = styled.button`\r\n    background-color: #fff;\r\n    padding: 10px;\r\n    margin-bottom: 40px;\r\n    color: black;\r\n    box-shadow: none;\r\n    border: none;\r\n`;\r\n\r\n\r\n\r\n\r\nexport default class App extends Component{\r\n\r\n    gotService = new gotService();\r\n\r\n    state = {\r\n        randomChar: true,\r\n        error: false,\r\n        selectedHouse: 20\r\n    }\r\n\r\n    componentDidCatch(){\r\n        console.log('error');\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    toggleRandomChar = () => {\r\n        this.setState((state) => {\r\n            return {\r\n                randomChar: !state.randomChar\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        \r\n        const char = this.state.randomChar ? <RandomChar/> : null;\r\n        \r\n        if (this.state.error){\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return (\r\n            <Router>\r\n            <div className='app'> \r\n                <Container>\r\n                    <Header />\r\n                </Container>\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg={{size: 5, offset: 0}}>\r\n                            {char}\r\n                            <ButtonRandomChar onClick={this.toggleRandomChar}>\r\n                                Toggle RandomChar\r\n                            </ButtonRandomChar>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    \r\n                    <Route path='/characters' component={CharacterPage}/>\r\n                    <Route path='/houses' component={HousesPage}/>\r\n                    <Route path='/books' exact component={BooksPage}/>\r\n                    <Route path='/books/:id' render={\r\n                        ({match}) => {\r\n                            const {id}=match.params;\r\n                            return <BooksItem bookId={id}/>\r\n                        }\r\n                        \r\n                    }/>\r\n                </Container>\r\n            </div>\r\n            </Router>\r\n        );\r\n    }\r\n\r\n    \r\n};\r\n\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}